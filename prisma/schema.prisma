generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  username  String     @unique
  firstName String?
  lastName  String?
  role      UserRole   @default(USER)
  isActive  Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  movements Movement[]

  @@map("users")
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  items       Item[]

  @@map("categories")
}

model Supplier {
  id          String   @id @default(cuid())
  name        String   @unique
  contactName String?
  email       String?
  phone       String?
  address     String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  items       Item[]

  @@map("suppliers")
}

model Item {
  id          String     @id @default(cuid())
  name        String
  description String?
  sku         String     @unique
  barcode     String?    @unique
  price       Decimal    @db.Decimal(10, 2)
  cost        Decimal    @db.Decimal(10, 2)
  quantity    Int        @default(0)
  minQuantity Int        @default(0)
  maxQuantity Int?
  unit        String     @default("pcs")
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  categoryId  String
  supplierId  String?
  category    Category   @relation(fields: [categoryId], references: [id])
  supplier    Supplier?  @relation(fields: [supplierId], references: [id])
  movements   Movement[]

  @@map("items")
}

model Movement {
  id        String       @id @default(cuid())
  type      MovementType
  quantity  Int
  reason    String?
  reference String?
  notes     String?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  itemId    String
  userId    String
  item      Item         @relation(fields: [itemId], references: [id])
  user      User         @relation(fields: [userId], references: [id])

  @@map("movements")
}

enum UserRole {
  ADMIN
  MANAGER
  USER
}

enum MovementType {
  IN
  OUT
  ADJUSTMENT
  TRANSFER
}
